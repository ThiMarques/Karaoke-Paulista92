{"ast":null,"code":"import { useEffect as $hPSQ5$useEffect } from \"react\";\nimport { useCallbackRef as $hPSQ5$useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\n/**\n * Listens for when the escape key is down\n */\n\nfunction $addc16e1bbe58fd0$export$3a72a57244d6e765(onEscapeKeyDownProp) {\n  const onEscapeKeyDown = $hPSQ5$useCallbackRef(onEscapeKeyDownProp);\n  $hPSQ5$useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.key === 'Escape') onEscapeKeyDown(event);\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [onEscapeKeyDown]);\n}\n\nexport { $addc16e1bbe58fd0$export$3a72a57244d6e765 as useEscapeKeydown };","map":{"version":3,"mappings":";;AAGA;;;;AAGA,SAASA,yCAAT,CAA0BC,mBAA1B,EAAgF;EAC9E,MAAMC,eAAe,GAAGC,qBAAc,CAACF,mBAAD,CAAtC;EAEAG,iBAAgB,MAAM;IACpB,MAAMC,aAAa,GAAIC,SAAyB;MAC9C,IAAIA,KAAK,CAACC,GAAND,KAAc,QAAlB,EACEJ,eAAe,CAACI,KAAD,CAAfJ;IAFJ;;IAKAM,QAAQ,CAACC,gBAATD,CAA0B,SAA1BA,EAAqCH,aAArCG;IACA,OAAO,MAAMA,QAAQ,CAACE,mBAATF,CAA6B,SAA7BA,EAAwCH,aAAxCG,CAAb;EAPF,GAQG,CAACN,eAAD,CARH;AASD","names":["useEscapeKeydown","onEscapeKeyDownProp","onEscapeKeyDown","useCallbackRef","React","handleKeyDown","event","key","document","addEventListener","removeEventListener"],"sources":["/home/ubuntu/Área de Trabalho/Projetos/All/karaoke/web/node_modules/@radix-ui/react-use-escape-keydown/dist/packages/react/use-escape-keydown/src/useEscapeKeydown.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\n/**\n * Listens for when the escape key is down\n */\nfunction useEscapeKeydown(onEscapeKeyDownProp?: (event: KeyboardEvent) => void) {\n  const onEscapeKeyDown = useCallbackRef(onEscapeKeyDownProp);\n\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        onEscapeKeyDown(event);\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [onEscapeKeyDown]);\n}\n\nexport { useEscapeKeydown };\n"]},"metadata":{},"sourceType":"module"}