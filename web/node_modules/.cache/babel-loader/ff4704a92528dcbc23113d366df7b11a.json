{"ast":null,"code":"import $67UHm$babelruntimehelpersesmextends from \"@babel/runtime/helpers/esm/extends\";\nimport { useRef as $67UHm$useRef, createElement as $67UHm$createElement, useCallback as $67UHm$useCallback, forwardRef as $67UHm$forwardRef, Children as $67UHm$Children, useEffect as $67UHm$useEffect, Fragment as $67UHm$Fragment } from \"react\";\nimport { composeEventHandlers as $67UHm$composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useComposedRefs as $67UHm$useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope as $67UHm$createContextScope, createContext as $67UHm$createContext } from \"@radix-ui/react-context\";\nimport { useId as $67UHm$useId } from \"@radix-ui/react-id\";\nimport { useControllableState as $67UHm$useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { DismissableLayer as $67UHm$DismissableLayer } from \"@radix-ui/react-dismissable-layer\";\nimport { FocusScope as $67UHm$FocusScope } from \"@radix-ui/react-focus-scope\";\nimport { Portal as $67UHm$Portal } from \"@radix-ui/react-portal\";\nimport { Presence as $67UHm$Presence } from \"@radix-ui/react-presence\";\nimport { Primitive as $67UHm$Primitive } from \"@radix-ui/react-primitive\";\nimport { useFocusGuards as $67UHm$useFocusGuards } from \"@radix-ui/react-focus-guards\";\nimport { RemoveScroll as $67UHm$RemoveScroll } from \"react-remove-scroll\";\nimport { hideOthers as $67UHm$hideOthers } from \"aria-hidden\";\nimport { Slot as $67UHm$Slot } from \"@radix-ui/react-slot\";\n/* -------------------------------------------------------------------------------------------------\n * Dialog\n * -----------------------------------------------------------------------------------------------*/\n\nconst $5d3850c4d0b4e6c7$var$DIALOG_NAME = 'Dialog';\nconst [$5d3850c4d0b4e6c7$var$createDialogContext, $5d3850c4d0b4e6c7$export$cc702773b8ea3e41] = $67UHm$createContextScope($5d3850c4d0b4e6c7$var$DIALOG_NAME);\nconst [$5d3850c4d0b4e6c7$var$DialogProvider, $5d3850c4d0b4e6c7$var$useDialogContext] = $5d3850c4d0b4e6c7$var$createDialogContext($5d3850c4d0b4e6c7$var$DIALOG_NAME);\n\nconst $5d3850c4d0b4e6c7$export$3ddf2d174ce01153 = props => {\n  const {\n    __scopeDialog: __scopeDialog,\n    children: children,\n    open: openProp,\n    defaultOpen: defaultOpen,\n    onOpenChange: onOpenChange,\n    modal = true\n  } = props;\n  const triggerRef = $67UHm$useRef(null);\n  const contentRef = $67UHm$useRef(null);\n  const [open = false, setOpen] = $67UHm$useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange\n  });\n  return /*#__PURE__*/$67UHm$createElement($5d3850c4d0b4e6c7$var$DialogProvider, {\n    scope: __scopeDialog,\n    triggerRef: triggerRef,\n    contentRef: contentRef,\n    contentId: $67UHm$useId(),\n    titleId: $67UHm$useId(),\n    descriptionId: $67UHm$useId(),\n    open: open,\n    onOpenChange: setOpen,\n    onOpenToggle: $67UHm$useCallback(() => setOpen(prevOpen => !prevOpen), [setOpen]),\n    modal: modal\n  }, children);\n};\n/*#__PURE__*/\n\n\nObject.assign($5d3850c4d0b4e6c7$export$3ddf2d174ce01153, {\n  displayName: $5d3850c4d0b4e6c7$var$DIALOG_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * DialogTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst $5d3850c4d0b4e6c7$var$TRIGGER_NAME = 'DialogTrigger';\nconst $5d3850c4d0b4e6c7$export$2e1e1122cf0cba88 = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeDialog: __scopeDialog,\n    ...triggerProps\n  } = props;\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$TRIGGER_NAME, __scopeDialog);\n  const composedTriggerRef = $67UHm$useComposedRefs(forwardedRef, context.triggerRef);\n  return /*#__PURE__*/$67UHm$createElement($67UHm$Primitive.button, $67UHm$babelruntimehelpersesmextends({\n    type: \"button\",\n    \"aria-haspopup\": \"dialog\",\n    \"aria-expanded\": context.open,\n    \"aria-controls\": context.contentId,\n    \"data-state\": $5d3850c4d0b4e6c7$var$getState(context.open)\n  }, triggerProps, {\n    ref: composedTriggerRef,\n    onClick: $67UHm$composeEventHandlers(props.onClick, context.onOpenToggle)\n  }));\n});\n/*#__PURE__*/\n\nObject.assign($5d3850c4d0b4e6c7$export$2e1e1122cf0cba88, {\n  displayName: $5d3850c4d0b4e6c7$var$TRIGGER_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * DialogPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst $5d3850c4d0b4e6c7$var$PORTAL_NAME = 'DialogPortal';\nconst [$5d3850c4d0b4e6c7$var$PortalProvider, $5d3850c4d0b4e6c7$var$usePortalContext] = $5d3850c4d0b4e6c7$var$createDialogContext($5d3850c4d0b4e6c7$var$PORTAL_NAME, {\n  forceMount: undefined\n});\n\nconst $5d3850c4d0b4e6c7$export$dad7c95542bacce0 = props => {\n  const {\n    __scopeDialog: __scopeDialog,\n    forceMount: forceMount,\n    children: children,\n    container: container\n  } = props;\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$PORTAL_NAME, __scopeDialog);\n  return /*#__PURE__*/$67UHm$createElement($5d3850c4d0b4e6c7$var$PortalProvider, {\n    scope: __scopeDialog,\n    forceMount: forceMount\n  }, $67UHm$Children.map(children, child => /*#__PURE__*/$67UHm$createElement($67UHm$Presence, {\n    present: forceMount || context.open\n  }, /*#__PURE__*/$67UHm$createElement($67UHm$Portal, {\n    asChild: true,\n    container: container\n  }, child))));\n};\n/*#__PURE__*/\n\n\nObject.assign($5d3850c4d0b4e6c7$export$dad7c95542bacce0, {\n  displayName: $5d3850c4d0b4e6c7$var$PORTAL_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * DialogOverlay\n * -----------------------------------------------------------------------------------------------*/\n\nconst $5d3850c4d0b4e6c7$var$OVERLAY_NAME = 'DialogOverlay';\nconst $5d3850c4d0b4e6c7$export$bd1d06c79be19e17 = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const portalContext = $5d3850c4d0b4e6c7$var$usePortalContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, props.__scopeDialog);\n  const {\n    forceMount = portalContext.forceMount,\n    ...overlayProps\n  } = props;\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, props.__scopeDialog);\n  return context.modal ? /*#__PURE__*/$67UHm$createElement($67UHm$Presence, {\n    present: forceMount || context.open\n  }, /*#__PURE__*/$67UHm$createElement($5d3850c4d0b4e6c7$var$DialogOverlayImpl, $67UHm$babelruntimehelpersesmextends({}, overlayProps, {\n    ref: forwardedRef\n  }))) : null;\n});\n/*#__PURE__*/\n\nObject.assign($5d3850c4d0b4e6c7$export$bd1d06c79be19e17, {\n  displayName: $5d3850c4d0b4e6c7$var$OVERLAY_NAME\n});\nconst $5d3850c4d0b4e6c7$var$DialogOverlayImpl = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeDialog: __scopeDialog,\n    ...overlayProps\n  } = props;\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, __scopeDialog);\n  return (\n    /*#__PURE__*/\n    // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`\n    // ie. when `Overlay` and `Content` are siblings\n    $67UHm$createElement($67UHm$RemoveScroll, {\n      as: $67UHm$Slot,\n      allowPinchZoom: true,\n      shards: [context.contentRef]\n    }, /*#__PURE__*/$67UHm$createElement($67UHm$Primitive.div, $67UHm$babelruntimehelpersesmextends({\n      \"data-state\": $5d3850c4d0b4e6c7$var$getState(context.open)\n    }, overlayProps, {\n      ref: forwardedRef // We re-enable pointer-events prevented by `Dialog.Content` to allow scrolling the overlay.\n      ,\n      style: {\n        pointerEvents: 'auto',\n        ...overlayProps.style\n      }\n    })))\n  );\n});\n/* -------------------------------------------------------------------------------------------------\n * DialogContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst $5d3850c4d0b4e6c7$var$CONTENT_NAME = 'DialogContent';\nconst $5d3850c4d0b4e6c7$export$b6d9565de1e068cf = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const portalContext = $5d3850c4d0b4e6c7$var$usePortalContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);\n  const {\n    forceMount = portalContext.forceMount,\n    ...contentProps\n  } = props;\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);\n  return /*#__PURE__*/$67UHm$createElement($67UHm$Presence, {\n    present: forceMount || context.open\n  }, context.modal ? /*#__PURE__*/$67UHm$createElement($5d3850c4d0b4e6c7$var$DialogContentModal, $67UHm$babelruntimehelpersesmextends({}, contentProps, {\n    ref: forwardedRef\n  })) : /*#__PURE__*/$67UHm$createElement($5d3850c4d0b4e6c7$var$DialogContentNonModal, $67UHm$babelruntimehelpersesmextends({}, contentProps, {\n    ref: forwardedRef\n  })));\n});\n/*#__PURE__*/\n\nObject.assign($5d3850c4d0b4e6c7$export$b6d9565de1e068cf, {\n  displayName: $5d3850c4d0b4e6c7$var$CONTENT_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/\n\nconst $5d3850c4d0b4e6c7$var$DialogContentModal = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);\n  const contentRef = $67UHm$useRef(null);\n  const composedRefs = $67UHm$useComposedRefs(forwardedRef, context.contentRef, contentRef); // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n\n  $67UHm$useEffect(() => {\n    const content = contentRef.current;\n    if (content) return $67UHm$hideOthers(content);\n  }, []);\n  return /*#__PURE__*/$67UHm$createElement($5d3850c4d0b4e6c7$var$DialogContentImpl, $67UHm$babelruntimehelpersesmextends({}, props, {\n    ref: composedRefs // we make sure focus isn't trapped once `DialogContent` has been closed\n    ,\n    trapFocus: context.open,\n    disableOutsidePointerEvents: true,\n    onCloseAutoFocus: $67UHm$composeEventHandlers(props.onCloseAutoFocus, event => {\n      var _context$triggerRef$c;\n\n      event.preventDefault();\n      (_context$triggerRef$c = context.triggerRef.current) === null || _context$triggerRef$c === void 0 || _context$triggerRef$c.focus();\n    }),\n    onPointerDownOutside: $67UHm$composeEventHandlers(props.onPointerDownOutside, event => {\n      const originalEvent = event.detail.originalEvent;\n      const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n      const isRightClick = originalEvent.button === 2 || ctrlLeftClick; // If the event is a right-click, we shouldn't close because\n      // it is effectively as if we right-clicked the `Overlay`.\n\n      if (isRightClick) event.preventDefault();\n    }) // When focus is trapped, a `focusout` event may still happen.\n    ,\n    onFocusOutside: $67UHm$composeEventHandlers(props.onFocusOutside, event => event.preventDefault())\n  }));\n});\n/* -----------------------------------------------------------------------------------------------*/\n\nconst $5d3850c4d0b4e6c7$var$DialogContentNonModal = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);\n  const hasInteractedOutsideRef = $67UHm$useRef(false);\n  return /*#__PURE__*/$67UHm$createElement($5d3850c4d0b4e6c7$var$DialogContentImpl, $67UHm$babelruntimehelpersesmextends({}, props, {\n    ref: forwardedRef,\n    trapFocus: false,\n    disableOutsidePointerEvents: false,\n    onCloseAutoFocus: event => {\n      var _props$onCloseAutoFoc;\n\n      (_props$onCloseAutoFoc = props.onCloseAutoFocus) === null || _props$onCloseAutoFoc === void 0 || _props$onCloseAutoFoc.call(props, event);\n\n      if (!event.defaultPrevented) {\n        var _context$triggerRef$c2;\n\n        if (!hasInteractedOutsideRef.current) (_context$triggerRef$c2 = context.triggerRef.current) === null || _context$triggerRef$c2 === void 0 || _context$triggerRef$c2.focus(); // Always prevent auto focus because we either focus manually or want user agent focus\n\n        event.preventDefault();\n      }\n\n      hasInteractedOutsideRef.current = false;\n    },\n    onInteractOutside: event => {\n      var _props$onInteractOuts, _context$triggerRef$c3;\n\n      (_props$onInteractOuts = props.onInteractOutside) === null || _props$onInteractOuts === void 0 || _props$onInteractOuts.call(props, event);\n      if (!event.defaultPrevented) hasInteractedOutsideRef.current = true; // Prevent dismissing when clicking the trigger.\n      // As the trigger is already setup to close, without doing so would\n      // cause it to close and immediately open.\n      //\n      // We use `onInteractOutside` as some browsers also\n      // focus on pointer down, creating the same issue.\n\n      const target = event.target;\n      const targetIsTrigger = (_context$triggerRef$c3 = context.triggerRef.current) === null || _context$triggerRef$c3 === void 0 ? void 0 : _context$triggerRef$c3.contains(target);\n      if (targetIsTrigger) event.preventDefault();\n    }\n  }));\n});\n/* -----------------------------------------------------------------------------------------------*/\n\nconst $5d3850c4d0b4e6c7$var$DialogContentImpl = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeDialog: __scopeDialog,\n    trapFocus: trapFocus,\n    onOpenAutoFocus: onOpenAutoFocus,\n    onCloseAutoFocus: onCloseAutoFocus,\n    ...contentProps\n  } = props;\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, __scopeDialog);\n  const contentRef = $67UHm$useRef(null);\n  const composedRefs = $67UHm$useComposedRefs(forwardedRef, contentRef); // Make sure the whole tree has focus guards as our `Dialog` will be\n  // the last element in the DOM (beacuse of the `Portal`)\n\n  $67UHm$useFocusGuards();\n  return /*#__PURE__*/$67UHm$createElement($67UHm$Fragment, null, /*#__PURE__*/$67UHm$createElement($67UHm$FocusScope, {\n    asChild: true,\n    loop: true,\n    trapped: trapFocus,\n    onMountAutoFocus: onOpenAutoFocus,\n    onUnmountAutoFocus: onCloseAutoFocus\n  }, /*#__PURE__*/$67UHm$createElement($67UHm$DismissableLayer, $67UHm$babelruntimehelpersesmextends({\n    role: \"dialog\",\n    id: context.contentId,\n    \"aria-describedby\": context.descriptionId,\n    \"aria-labelledby\": context.titleId,\n    \"data-state\": $5d3850c4d0b4e6c7$var$getState(context.open)\n  }, contentProps, {\n    ref: composedRefs,\n    onDismiss: () => context.onOpenChange(false)\n  }))), false);\n});\n/* -------------------------------------------------------------------------------------------------\n * DialogTitle\n * -----------------------------------------------------------------------------------------------*/\n\nconst $5d3850c4d0b4e6c7$var$TITLE_NAME = 'DialogTitle';\nconst $5d3850c4d0b4e6c7$export$16f7638e4a34b909 = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeDialog: __scopeDialog,\n    ...titleProps\n  } = props;\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$TITLE_NAME, __scopeDialog);\n  return /*#__PURE__*/$67UHm$createElement($67UHm$Primitive.h2, $67UHm$babelruntimehelpersesmextends({\n    id: context.titleId\n  }, titleProps, {\n    ref: forwardedRef\n  }));\n});\n/*#__PURE__*/\n\nObject.assign($5d3850c4d0b4e6c7$export$16f7638e4a34b909, {\n  displayName: $5d3850c4d0b4e6c7$var$TITLE_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * DialogDescription\n * -----------------------------------------------------------------------------------------------*/\n\nconst $5d3850c4d0b4e6c7$var$DESCRIPTION_NAME = 'DialogDescription';\nconst $5d3850c4d0b4e6c7$export$94e94c2ec2c954d5 = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeDialog: __scopeDialog,\n    ...descriptionProps\n  } = props;\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$DESCRIPTION_NAME, __scopeDialog);\n  return /*#__PURE__*/$67UHm$createElement($67UHm$Primitive.p, $67UHm$babelruntimehelpersesmextends({\n    id: context.descriptionId\n  }, descriptionProps, {\n    ref: forwardedRef\n  }));\n});\n/*#__PURE__*/\n\nObject.assign($5d3850c4d0b4e6c7$export$94e94c2ec2c954d5, {\n  displayName: $5d3850c4d0b4e6c7$var$DESCRIPTION_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * DialogClose\n * -----------------------------------------------------------------------------------------------*/\n\nconst $5d3850c4d0b4e6c7$var$CLOSE_NAME = 'DialogClose';\nconst $5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeDialog: __scopeDialog,\n    ...closeProps\n  } = props;\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CLOSE_NAME, __scopeDialog);\n  return /*#__PURE__*/$67UHm$createElement($67UHm$Primitive.button, $67UHm$babelruntimehelpersesmextends({\n    type: \"button\"\n  }, closeProps, {\n    ref: forwardedRef,\n    onClick: $67UHm$composeEventHandlers(props.onClick, () => context.onOpenChange(false))\n  }));\n});\n/*#__PURE__*/\n\nObject.assign($5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac, {\n  displayName: $5d3850c4d0b4e6c7$var$CLOSE_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction $5d3850c4d0b4e6c7$var$getState(open) {\n  return open ? 'open' : 'closed';\n}\n\nconst $5d3850c4d0b4e6c7$var$TITLE_WARNING_NAME = 'DialogTitleWarning';\nconst [$5d3850c4d0b4e6c7$export$69b62a49393917d6, $5d3850c4d0b4e6c7$var$useWarningContext] = $67UHm$createContext($5d3850c4d0b4e6c7$var$TITLE_WARNING_NAME, {\n  contentName: $5d3850c4d0b4e6c7$var$CONTENT_NAME,\n  titleName: $5d3850c4d0b4e6c7$var$TITLE_NAME,\n  docsSlug: 'dialog'\n});\n\nconst $5d3850c4d0b4e6c7$var$TitleWarning = _ref => {\n  let {\n    titleId: titleId\n  } = _ref;\n  const titleWarningContext = $5d3850c4d0b4e6c7$var$useWarningContext($5d3850c4d0b4e6c7$var$TITLE_WARNING_NAME);\n  const MESSAGE = `\\`${titleWarningContext.contentName}\\` requires a \\`${titleWarningContext.titleName}\\` for the component to be accessible for screen reader users.\n\nIf you want to hide the \\`${titleWarningContext.titleName}\\`, you can wrap it with our VisuallyHidden component.\n\nFor more information, see https://radix-ui.com/primitives/docs/components/${titleWarningContext.docsSlug}`;\n  $67UHm$useEffect(() => {\n    if (titleId) {\n      const hasTitle = document.getElementById(titleId);\n      if (!hasTitle) throw new Error(MESSAGE);\n    }\n  }, [MESSAGE, titleId]);\n  return null;\n};\n\nconst $5d3850c4d0b4e6c7$var$DESCRIPTION_WARNING_NAME = 'DialogDescriptionWarning';\n\nconst $5d3850c4d0b4e6c7$var$DescriptionWarning = _ref2 => {\n  let {\n    contentRef: contentRef,\n    descriptionId: descriptionId\n  } = _ref2;\n  const descriptionWarningContext = $5d3850c4d0b4e6c7$var$useWarningContext($5d3850c4d0b4e6c7$var$DESCRIPTION_WARNING_NAME);\n  const MESSAGE = `Warning: Missing \\`Description\\` or \\`aria-describedby={undefined}\\` for {${descriptionWarningContext.contentName}}.`;\n  $67UHm$useEffect(() => {\n    var _contentRef$current;\n\n    const describedById = (_contentRef$current = contentRef.current) === null || _contentRef$current === void 0 ? void 0 : _contentRef$current.getAttribute('aria-describedby'); // if we have an id and the user hasn't set aria-describedby={undefined}\n\n    if (descriptionId && describedById) {\n      const hasDescription = document.getElementById(descriptionId);\n      if (!hasDescription) console.warn(MESSAGE);\n    }\n  }, [MESSAGE, contentRef, descriptionId]);\n  return null;\n};\n\nconst $5d3850c4d0b4e6c7$export$be92b6f5f03c0fe9 = $5d3850c4d0b4e6c7$export$3ddf2d174ce01153;\nconst $5d3850c4d0b4e6c7$export$41fb9f06171c75f4 = $5d3850c4d0b4e6c7$export$2e1e1122cf0cba88;\nconst $5d3850c4d0b4e6c7$export$602eac185826482c = $5d3850c4d0b4e6c7$export$dad7c95542bacce0;\nconst $5d3850c4d0b4e6c7$export$c6fdb837b070b4ff = $5d3850c4d0b4e6c7$export$bd1d06c79be19e17;\nconst $5d3850c4d0b4e6c7$export$7c6e2c02157bb7d2 = $5d3850c4d0b4e6c7$export$b6d9565de1e068cf;\nconst $5d3850c4d0b4e6c7$export$f99233281efd08a0 = $5d3850c4d0b4e6c7$export$16f7638e4a34b909;\nconst $5d3850c4d0b4e6c7$export$393edc798c47379d = $5d3850c4d0b4e6c7$export$94e94c2ec2c954d5;\nconst $5d3850c4d0b4e6c7$export$f39c2d165cd861fe = $5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac;\nexport { $5d3850c4d0b4e6c7$export$cc702773b8ea3e41 as createDialogScope, $5d3850c4d0b4e6c7$export$3ddf2d174ce01153 as Dialog, $5d3850c4d0b4e6c7$export$2e1e1122cf0cba88 as DialogTrigger, $5d3850c4d0b4e6c7$export$dad7c95542bacce0 as DialogPortal, $5d3850c4d0b4e6c7$export$bd1d06c79be19e17 as DialogOverlay, $5d3850c4d0b4e6c7$export$b6d9565de1e068cf as DialogContent, $5d3850c4d0b4e6c7$export$16f7638e4a34b909 as DialogTitle, $5d3850c4d0b4e6c7$export$94e94c2ec2c954d5 as DialogDescription, $5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac as DialogClose, $5d3850c4d0b4e6c7$export$be92b6f5f03c0fe9 as Root, $5d3850c4d0b4e6c7$export$41fb9f06171c75f4 as Trigger, $5d3850c4d0b4e6c7$export$602eac185826482c as Portal, $5d3850c4d0b4e6c7$export$c6fdb837b070b4ff as Overlay, $5d3850c4d0b4e6c7$export$7c6e2c02157bb7d2 as Content, $5d3850c4d0b4e6c7$export$f99233281efd08a0 as Title, $5d3850c4d0b4e6c7$export$393edc798c47379d as Description, $5d3850c4d0b4e6c7$export$f39c2d165cd861fe as Close, $5d3850c4d0b4e6c7$export$69b62a49393917d6 as WarningProvider };","map":{"version":3,"mappings":"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","names":["DIALOG_NAME","createDialogContext","createDialogScope","createContextScope","DialogProvider","useDialogContext","Dialog","props","__scopeDialog","children","open","openProp","defaultOpen","onOpenChange","modal","triggerRef","React","contentRef","setOpen","useControllableState","prop","defaultProp","onChange","$67UHm$createElement","$5d3850c4d0b4e6c7$var$DialogProvider","scope","contentId","useId","titleId","descriptionId","onOpenToggle","prevOpen","Object","displayName","TRIGGER_NAME","DialogTrigger","forwardedRef","triggerProps","context","composedTriggerRef","useComposedRefs","$67UHm$Primitive","button","$67UHm$babelruntimehelpersesmextends","type","getState","ref","onClick","composeEventHandlers","PORTAL_NAME","PortalProvider","usePortalContext","forceMount","undefined","DialogPortal","container","$5d3850c4d0b4e6c7$var$PortalProvider","map","child","$67UHm$Presence","present","$67UHm$Portal","asChild","OVERLAY_NAME","DialogOverlay","portalContext","overlayProps","$5d3850c4d0b4e6c7$var$DialogOverlayImpl","DialogOverlayImpl","$67UHm$RemoveScroll","as","Slot","allowPinchZoom","shards","div","style","pointerEvents","CONTENT_NAME","DialogContent","contentProps","$5d3850c4d0b4e6c7$var$DialogContentModal","$5d3850c4d0b4e6c7$var$DialogContentNonModal","DialogContentModal","composedRefs","content","current","hideOthers","$5d3850c4d0b4e6c7$var$DialogContentImpl","trapFocus","disableOutsidePointerEvents","onCloseAutoFocus","event","preventDefault","focus","onPointerDownOutside","originalEvent","detail","ctrlLeftClick","ctrlKey","isRightClick","onFocusOutside","DialogContentNonModal","hasInteractedOutsideRef","defaultPrevented","onInteractOutside","target","targetIsTrigger","_context$triggerRef$c3","contains","DialogContentImpl","onOpenAutoFocus","useFocusGuards","$67UHm$FocusScope","loop","trapped","onMountAutoFocus","onUnmountAutoFocus","$67UHm$DismissableLayer","role","id","onDismiss","process","TITLE_NAME","DialogTitle","titleProps","h2","DESCRIPTION_NAME","DialogDescription","descriptionProps","p","CLOSE_NAME","DialogClose","closeProps","TITLE_WARNING_NAME","WarningProvider","useWarningContext","createContext","contentName","titleName","docsSlug","TitleWarning","titleWarningContext","MESSAGE","hasTitle","document","getElementById","Error","DESCRIPTION_WARNING_NAME","DescriptionWarning","descriptionWarningContext","describedById","_contentRef$current","getAttribute","hasDescription","console","warn","Root","Trigger","Portal","Overlay","Content","Title","Description","Close"],"sources":["/home/ubuntu/Área de Trabalho/Projetos/All/karaoke/web/node_modules/@radix-ui/react-dialog/dist/packages/react/dialog/src/Dialog.tsx"],"sourcesContent":["import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContext, createContextScope } from '@radix-ui/react-context';\nimport { useId } from '@radix-ui/react-id';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { RemoveScroll } from 'react-remove-scroll';\nimport { hideOthers } from 'aria-hidden';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Dialog\n * -----------------------------------------------------------------------------------------------*/\n\nconst DIALOG_NAME = 'Dialog';\n\ntype ScopedProps<P> = P & { __scopeDialog?: Scope };\nconst [createDialogContext, createDialogScope] = createContextScope(DIALOG_NAME);\n\ntype DialogContextValue = {\n  triggerRef: React.RefObject<HTMLButtonElement>;\n  contentRef: React.RefObject<DialogContentElement>;\n  contentId: string;\n  titleId: string;\n  descriptionId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  modal: boolean;\n};\n\nconst [DialogProvider, useDialogContext] = createDialogContext<DialogContextValue>(DIALOG_NAME);\n\ninterface DialogProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  modal?: boolean;\n}\n\nconst Dialog: React.FC<DialogProps> = (props: ScopedProps<DialogProps>) => {\n  const {\n    __scopeDialog,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = true,\n  } = props;\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const contentRef = React.useRef<DialogContentElement>(null);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <DialogProvider\n      scope={__scopeDialog}\n      triggerRef={triggerRef}\n      contentRef={contentRef}\n      contentId={useId()}\n      titleId={useId()}\n      descriptionId={useId()}\n      open={open}\n      onOpenChange={setOpen}\n      onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n      modal={modal}\n    >\n      {children}\n    </DialogProvider>\n  );\n};\n\nDialog.displayName = DIALOG_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'DialogTrigger';\n\ntype DialogTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface DialogTriggerProps extends PrimitiveButtonProps {}\n\nconst DialogTrigger = React.forwardRef<DialogTriggerElement, DialogTriggerProps>(\n  (props: ScopedProps<DialogTriggerProps>, forwardedRef) => {\n    const { __scopeDialog, ...triggerProps } = props;\n    const context = useDialogContext(TRIGGER_NAME, __scopeDialog);\n    const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);\n    return (\n      <Primitive.button\n        type=\"button\"\n        aria-haspopup=\"dialog\"\n        aria-expanded={context.open}\n        aria-controls={context.contentId}\n        data-state={getState(context.open)}\n        {...triggerProps}\n        ref={composedTriggerRef}\n        onClick={composeEventHandlers(props.onClick, context.onOpenToggle)}\n      />\n    );\n  }\n);\n\nDialogTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'DialogPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createDialogContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface DialogPortalProps extends Omit<PortalProps, 'asChild'> {\n  children?: React.ReactNode;\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogPortal: React.FC<DialogPortalProps> = (props: ScopedProps<DialogPortalProps>) => {\n  const { __scopeDialog, forceMount, children, container } = props;\n  const context = useDialogContext(PORTAL_NAME, __scopeDialog);\n  return (\n    <PortalProvider scope={__scopeDialog} forceMount={forceMount}>\n      {React.Children.map(children, (child) => (\n        <Presence present={forceMount || context.open}>\n          <PortalPrimitive asChild container={container}>\n            {child}\n          </PortalPrimitive>\n        </Presence>\n      ))}\n    </PortalProvider>\n  );\n};\n\nDialogPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogOverlay\n * -----------------------------------------------------------------------------------------------*/\n\nconst OVERLAY_NAME = 'DialogOverlay';\n\ntype DialogOverlayElement = DialogOverlayImplElement;\ninterface DialogOverlayProps extends DialogOverlayImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogOverlay = React.forwardRef<DialogOverlayElement, DialogOverlayProps>(\n  (props: ScopedProps<DialogOverlayProps>, forwardedRef) => {\n    const portalContext = usePortalContext(OVERLAY_NAME, props.__scopeDialog);\n    const { forceMount = portalContext.forceMount, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, props.__scopeDialog);\n    return context.modal ? (\n      <Presence present={forceMount || context.open}>\n        <DialogOverlayImpl {...overlayProps} ref={forwardedRef} />\n      </Presence>\n    ) : null;\n  }\n);\n\nDialogOverlay.displayName = OVERLAY_NAME;\n\ntype DialogOverlayImplElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface DialogOverlayImplProps extends PrimitiveDivProps {}\n\nconst DialogOverlayImpl = React.forwardRef<DialogOverlayImplElement, DialogOverlayImplProps>(\n  (props: ScopedProps<DialogOverlayImplProps>, forwardedRef) => {\n    const { __scopeDialog, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, __scopeDialog);\n    return (\n      // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`\n      // ie. when `Overlay` and `Content` are siblings\n      <RemoveScroll as={Slot} allowPinchZoom shards={[context.contentRef]}>\n        <Primitive.div\n          data-state={getState(context.open)}\n          {...overlayProps}\n          ref={forwardedRef}\n          // We re-enable pointer-events prevented by `Dialog.Content` to allow scrolling the overlay.\n          style={{ pointerEvents: 'auto', ...overlayProps.style }}\n        />\n      </RemoveScroll>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * DialogContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'DialogContent';\n\ntype DialogContentElement = DialogContentTypeElement;\ninterface DialogContentProps extends DialogContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogContent = React.forwardRef<DialogContentElement, DialogContentProps>(\n  (props: ScopedProps<DialogContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeDialog);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    return (\n      <Presence present={forceMount || context.open}>\n        {context.modal ? (\n          <DialogContentModal {...contentProps} ref={forwardedRef} />\n        ) : (\n          <DialogContentNonModal {...contentProps} ref={forwardedRef} />\n        )}\n      </Presence>\n    );\n  }\n);\n\nDialogContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype DialogContentTypeElement = DialogContentImplElement;\ninterface DialogContentTypeProps\n  extends Omit<DialogContentImplProps, 'trapFocus' | 'disableOutsidePointerEvents'> {}\n\nconst DialogContentModal = React.forwardRef<DialogContentTypeElement, DialogContentTypeProps>(\n  (props: ScopedProps<DialogContentTypeProps>, forwardedRef) => {\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, context.contentRef, contentRef);\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      const content = contentRef.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    return (\n      <DialogContentImpl\n        {...props}\n        ref={composedRefs}\n        // we make sure focus isn't trapped once `DialogContent` has been closed\n        // (closed !== unmounted when animating out)\n        trapFocus={context.open}\n        disableOutsidePointerEvents\n        onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n          event.preventDefault();\n          context.triggerRef.current?.focus();\n        })}\n        onPointerDownOutside={composeEventHandlers(props.onPointerDownOutside, (event) => {\n          const originalEvent = event.detail.originalEvent;\n          const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n          const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n\n          // If the event is a right-click, we shouldn't close because\n          // it is effectively as if we right-clicked the `Overlay`.\n          if (isRightClick) event.preventDefault();\n        })}\n        // When focus is trapped, a `focusout` event may still happen.\n        // We make sure we don't trigger our `onDismiss` in such case.\n        onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) =>\n          event.preventDefault()\n        )}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst DialogContentNonModal = React.forwardRef<DialogContentTypeElement, DialogContentTypeProps>(\n  (props: ScopedProps<DialogContentTypeProps>, forwardedRef) => {\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const hasInteractedOutsideRef = React.useRef(false);\n\n    return (\n      <DialogContentImpl\n        {...props}\n        ref={forwardedRef}\n        trapFocus={false}\n        disableOutsidePointerEvents={false}\n        onCloseAutoFocus={(event) => {\n          props.onCloseAutoFocus?.(event);\n\n          if (!event.defaultPrevented) {\n            if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n            // Always prevent auto focus because we either focus manually or want user agent focus\n            event.preventDefault();\n          }\n\n          hasInteractedOutsideRef.current = false;\n        }}\n        onInteractOutside={(event) => {\n          props.onInteractOutside?.(event);\n\n          if (!event.defaultPrevented) hasInteractedOutsideRef.current = true;\n\n          // Prevent dismissing when clicking the trigger.\n          // As the trigger is already setup to close, without doing so would\n          // cause it to close and immediately open.\n          //\n          // We use `onInteractOutside` as some browsers also\n          // focus on pointer down, creating the same issue.\n          const target = event.target as HTMLElement;\n          const targetIsTrigger = context.triggerRef.current?.contains(target);\n          if (targetIsTrigger) event.preventDefault();\n        }}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype DialogContentImplElement = React.ElementRef<typeof DismissableLayer>;\ntype DismissableLayerProps = Radix.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype FocusScopeProps = Radix.ComponentPropsWithoutRef<typeof FocusScope>;\ninterface DialogContentImplProps extends Omit<DismissableLayerProps, 'onDismiss'> {\n  /**\n   * When `true`, focus cannot escape the `Content` via keyboard,\n   * pointer, or a programmatic focus.\n   * @defaultValue false\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n\n  /**\n   * Event handler called when auto-focusing on open.\n   * Can be prevented.\n   */\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n}\n\nconst DialogContentImpl = React.forwardRef<DialogContentImplElement, DialogContentImplProps>(\n  (props: ScopedProps<DialogContentImplProps>, forwardedRef) => {\n    const { __scopeDialog, trapFocus, onOpenAutoFocus, onCloseAutoFocus, ...contentProps } = props;\n    const context = useDialogContext(CONTENT_NAME, __scopeDialog);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n\n    // Make sure the whole tree has focus guards as our `Dialog` will be\n    // the last element in the DOM (beacuse of the `Portal`)\n    useFocusGuards();\n\n    return (\n      <>\n        <FocusScope\n          asChild\n          loop\n          trapped={trapFocus}\n          onMountAutoFocus={onOpenAutoFocus}\n          onUnmountAutoFocus={onCloseAutoFocus}\n        >\n          <DismissableLayer\n            role=\"dialog\"\n            id={context.contentId}\n            aria-describedby={context.descriptionId}\n            aria-labelledby={context.titleId}\n            data-state={getState(context.open)}\n            {...contentProps}\n            ref={composedRefs}\n            onDismiss={() => context.onOpenChange(false)}\n          />\n        </FocusScope>\n        {process.env.NODE_ENV !== 'production' && (\n          <>\n            <TitleWarning titleId={context.titleId} />\n            <DescriptionWarning contentRef={contentRef} descriptionId={context.descriptionId} />\n          </>\n        )}\n      </>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * DialogTitle\n * -----------------------------------------------------------------------------------------------*/\n\nconst TITLE_NAME = 'DialogTitle';\n\ntype DialogTitleElement = React.ElementRef<typeof Primitive.h2>;\ntype PrimitiveHeading2Props = Radix.ComponentPropsWithoutRef<typeof Primitive.h2>;\ninterface DialogTitleProps extends PrimitiveHeading2Props {}\n\nconst DialogTitle = React.forwardRef<DialogTitleElement, DialogTitleProps>(\n  (props: ScopedProps<DialogTitleProps>, forwardedRef) => {\n    const { __scopeDialog, ...titleProps } = props;\n    const context = useDialogContext(TITLE_NAME, __scopeDialog);\n    return <Primitive.h2 id={context.titleId} {...titleProps} ref={forwardedRef} />;\n  }\n);\n\nDialogTitle.displayName = TITLE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogDescription\n * -----------------------------------------------------------------------------------------------*/\n\nconst DESCRIPTION_NAME = 'DialogDescription';\n\ntype DialogDescriptionElement = React.ElementRef<typeof Primitive.p>;\ntype PrimitiveParagraphProps = Radix.ComponentPropsWithoutRef<typeof Primitive.p>;\ninterface DialogDescriptionProps extends PrimitiveParagraphProps {}\n\nconst DialogDescription = React.forwardRef<DialogDescriptionElement, DialogDescriptionProps>(\n  (props: ScopedProps<DialogDescriptionProps>, forwardedRef) => {\n    const { __scopeDialog, ...descriptionProps } = props;\n    const context = useDialogContext(DESCRIPTION_NAME, __scopeDialog);\n    return <Primitive.p id={context.descriptionId} {...descriptionProps} ref={forwardedRef} />;\n  }\n);\n\nDialogDescription.displayName = DESCRIPTION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogClose\n * -----------------------------------------------------------------------------------------------*/\n\nconst CLOSE_NAME = 'DialogClose';\n\ntype DialogCloseElement = React.ElementRef<typeof Primitive.button>;\ninterface DialogCloseProps extends PrimitiveButtonProps {}\n\nconst DialogClose = React.forwardRef<DialogCloseElement, DialogCloseProps>(\n  (props: ScopedProps<DialogCloseProps>, forwardedRef) => {\n    const { __scopeDialog, ...closeProps } = props;\n    const context = useDialogContext(CLOSE_NAME, __scopeDialog);\n    return (\n      <Primitive.button\n        type=\"button\"\n        {...closeProps}\n        ref={forwardedRef}\n        onClick={composeEventHandlers(props.onClick, () => context.onOpenChange(false))}\n      />\n    );\n  }\n);\n\nDialogClose.displayName = CLOSE_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst TITLE_WARNING_NAME = 'DialogTitleWarning';\n\nconst [WarningProvider, useWarningContext] = createContext(TITLE_WARNING_NAME, {\n  contentName: CONTENT_NAME,\n  titleName: TITLE_NAME,\n  docsSlug: 'dialog',\n});\n\ntype TitleWarningProps = { titleId?: string };\n\nconst TitleWarning: React.FC<TitleWarningProps> = ({ titleId }) => {\n  const titleWarningContext = useWarningContext(TITLE_WARNING_NAME);\n\n  const MESSAGE = `\\`${titleWarningContext.contentName}\\` requires a \\`${titleWarningContext.titleName}\\` for the component to be accessible for screen reader users.\n\nIf you want to hide the \\`${titleWarningContext.titleName}\\`, you can wrap it with our VisuallyHidden component.\n\nFor more information, see https://radix-ui.com/primitives/docs/components/${titleWarningContext.docsSlug}`;\n\n  React.useEffect(() => {\n    if (titleId) {\n      const hasTitle = document.getElementById(titleId);\n      if (!hasTitle) throw new Error(MESSAGE);\n    }\n  }, [MESSAGE, titleId]);\n\n  return null;\n};\n\nconst DESCRIPTION_WARNING_NAME = 'DialogDescriptionWarning';\n\ntype DescriptionWarningProps = {\n  contentRef: React.RefObject<DialogContentElement>;\n  descriptionId?: string;\n};\n\nconst DescriptionWarning: React.FC<DescriptionWarningProps> = ({ contentRef, descriptionId }) => {\n  const descriptionWarningContext = useWarningContext(DESCRIPTION_WARNING_NAME);\n  const MESSAGE = `Warning: Missing \\`Description\\` or \\`aria-describedby={undefined}\\` for {${descriptionWarningContext.contentName}}.`;\n\n  React.useEffect(() => {\n    const describedById = contentRef.current?.getAttribute('aria-describedby');\n    // if we have an id and the user hasn't set aria-describedby={undefined}\n    if (descriptionId && describedById) {\n      const hasDescription = document.getElementById(descriptionId);\n      if (!hasDescription) console.warn(MESSAGE);\n    }\n  }, [MESSAGE, contentRef, descriptionId]);\n\n  return null;\n};\n\nconst Root = Dialog;\nconst Trigger = DialogTrigger;\nconst Portal = DialogPortal;\nconst Overlay = DialogOverlay;\nconst Content = DialogContent;\nconst Title = DialogTitle;\nconst Description = DialogDescription;\nconst Close = DialogClose;\n\nexport {\n  createDialogScope,\n  //\n  Dialog,\n  DialogTrigger,\n  DialogPortal,\n  DialogOverlay,\n  DialogContent,\n  DialogTitle,\n  DialogDescription,\n  DialogClose,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Overlay,\n  Content,\n  Title,\n  Description,\n  Close,\n  //\n  WarningProvider,\n};\nexport type {\n  DialogProps,\n  DialogTriggerProps,\n  DialogPortalProps,\n  DialogOverlayProps,\n  DialogContentProps,\n  DialogTitleProps,\n  DialogDescriptionProps,\n  DialogCloseProps,\n};\n"]},"metadata":{},"sourceType":"module"}